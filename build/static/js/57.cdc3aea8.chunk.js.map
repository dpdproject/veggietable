{"version":3,"file":"static/js/57.cdc3aea8.chunk.js","mappings":"4PAsCA,EA5BoB,SAACA,GACnB,IAAQC,GAAUC,EAAAA,EAAAA,YAAWC,EAAAA,GAArBF,MAGFG,GAASJ,EAAMK,gBAAkB,KAAKC,QAAQ,GAEpD,OACE,qBAASC,UAAU,cAAa,WAC9B,iBAAKA,UAAU,oBAAmB,WAChC,gBAAKC,IAAKR,EAAMS,OAASC,EAAcC,IAAKX,EAAMY,SAClD,gBAAKL,UAAU,yBAAwB,UACrC,SAACM,EAAA,EAAM,CAACC,YAAa,kBAAMb,EAAMD,EAAM,EAAEe,KAAM,yBAGnD,iBAAKR,UAAU,mBAAkB,WAC/B,SAACS,EAAA,EAAQ,CAACD,KAAM,iBAAkBE,KAAMjB,EAAMkB,kBAC9C,SAACF,EAAA,EAAQ,CAACD,KAAM,gBAAiBE,KAAMjB,EAAMmB,YAC7C,SAACH,EAAA,EAAQ,CAACD,KAAM,sBAAuBE,KAAMb,QAE/C,SAACgB,EAAA,EAAM,CACLC,OAAM,mBAAcrB,EAAMsB,IAC1BV,MAAOZ,EAAMY,MACbW,MAAO,wBAIf,ECtBA,EAXoB,SAACC,GACnB,IAAMC,EAAiBD,EAAKA,KAAKC,eAOjC,OANAC,QAAQC,IAAIH,GAEIC,EAAeG,KAAI,SAACC,GAClC,OAAO,SAAC,GAAW,kBAAmBA,GAAI,IAAEL,KAAMC,IAAzBI,EAAKP,GAChC,GAGF,EC4DA,EAhE2B,SAACQ,GAAc,IAAD,EACvC,GAAuB5B,EAAAA,EAAAA,YAAWC,EAAAA,GAA1BF,EAAK,EAALA,MAAO8B,EAAG,EAAHA,IAETC,EAAWF,EAASA,SACpBN,EAAOQ,EAASR,KAGhBS,EAAkB,OAAJT,QAAI,IAAJA,GAAyB,QAArB,EAAJA,EAAMU,2BAAmB,WAArB,EAAJ,EAA2BN,KAAI,SAACC,GAClD,OACE,0BACGA,EAAKM,SAASC,OAAOC,OAAM,IAAGR,EAAKM,SAASC,OAAOE,UAAW,IAC9DT,EAAKU,OAFCV,EAAKP,GAKlB,IAEA,OACE,oBAASf,UAAU,oBAAmB,UACpC,iBAAKA,UAAU,gBAAe,WAC5B,SAACiC,EAAA,EAAK,CAAC5B,MAAOY,EAAKZ,SACnB,SAAC6B,EAAA,EAAQ,CACPvB,eAAgBM,EAAKN,eACrBC,SAAUK,EAAKL,SACff,MAAO4B,EAAS5B,SAElB,iBAAKG,UAAU,sBAAqB,WAClC,4BACE,gBAAKC,IAAKgB,EAAKf,MAAOE,IAAKa,EAAKZ,SAChC,gBAAKL,UAAU,uBAAsB,UACnC,SAACM,EAAA,EAAM,CACLC,YAAa,kBAAMb,EAAMuB,EAAK,EAC9BT,KACEgB,EAAIW,MAAK,SAACb,GAAI,OAAKA,EAAKP,KAAOE,EAAKF,EAAE,IAClC,iBACA,KAENqB,KAAM,0BAIZ,4BACE,iBAAKpC,UAAU,6BAA4B,WACzC,yCACA,wBAAK0B,QAEP,iBAAK1B,UAAU,8BAA6B,WAC1C,yCACA,yBACE,uBAAIiB,EAAKoB,2BAKjB,iBAAKrC,UAAU,yBAAwB,WACrC,6CACA,gBAAKA,UAAU,UAAS,UACtB,SAAC,EAAW,CAACiB,KAAMQ,aAM/B,C","sources":["components/UI/molecules/SimilarCard.js","components/UI/organisms/SimilarList.js","components/UI/layout/SingleRecipeLayout.js"],"sourcesContent":["import React, { useContext } from \"react\";\nimport \"./css/similarcard.css\";\n\nimport defaultImage from \"../../../images/default_image.jpg\";\nimport { FavContext } from \"../../../context/FavContext\";\n\nimport Button from \"../atoms/Button\";\nimport InfoIcon from \"../atoms/InfoIcon\";\nimport MyLink from \"../atoms/MyLink\";\n\nconst SimilarCard = (props) => {\n  const { myFav } = useContext(FavContext);\n\n  // FIX PRICE INFORMATIONS\n  const price = (props.pricePerServing / 100).toFixed(2);\n\n  return (\n    <section className=\"similarCard\">\n      <div className=\"recipeCard--image\">\n        <img src={props.image || defaultImage} alt={props.title} />\n        <div className=\"recipeCard--image--fav\">\n          <Button handleClick={() => myFav(props)} icon={\"fi fi-sr-heart\"} />\n        </div>\n      </div>\n      <div className=\"recipeCard--info\">\n        <InfoIcon icon={\"fi fi-rr-clock\"} info={props.readyInMinutes} />\n        <InfoIcon icon={\"fi fi-rr-user\"} info={props.servings} />\n        <InfoIcon icon={\"fi fi-rr-usd-circle\"} info={price} />\n      </div>\n      <MyLink\n        linkTo={`/recipes/${props.id}`}\n        title={props.title}\n        class={\"recipeCard--title\"}\n      />\n    </section>\n  );\n};\n\nexport default SimilarCard;\n","import React from \"react\";\nimport SimilarCard from \"../../UI/molecules/SimilarCard\";\n\nconst SimilarList = (data) => {\n  const similarRecipes = data.data.similarRecipes;\n  console.log(data);\n\n  const similar = similarRecipes.map((item) => {\n    return <SimilarCard key={item.id} {...item} data={similarRecipes} />;\n  });\n\n  return similar;\n};\n\nexport default SimilarList;\n","import React, { useContext } from \"react\";\n\nimport { FavContext } from \"../../../context/FavContext\";\nimport Title from \"../atoms/Title\";\nimport Button from \"../atoms/Button\";\nimport InfoList from \"../molecules/InfoList\";\nimport SimilarList from \"../organisms/SimilarList\";\n\nconst SingleRecipeLayout = (infoData) => {\n  const { myFav, fav } = useContext(FavContext);\n\n  const tempData = infoData.infoData;\n  const data = tempData.data;\n\n  // CREATE THE INGREDIENTS LIST\n  const ingredients = data?.extendedIngredients?.map((item) => {\n    return (\n      <li key={item.id}>\n        {item.measures.metric.amount} {item.measures.metric.unitShort}{\" \"}\n        {item.name}\n      </li>\n    );\n  });\n\n  return (\n    <section className=\"recipe--container\">\n      <div className=\"recipeSection\">\n        <Title title={data.title} />\n        <InfoList\n          readyInMinutes={data.readyInMinutes}\n          servings={data.servings}\n          price={tempData.price}\n        />\n        <div className=\"recipeSection--data\">\n          <div>\n            <img src={data.image} alt={data.title} />\n            <div className=\"recipeSection--icons\">\n              <Button\n                handleClick={() => myFav(data)}\n                icon={\n                  fav.find((item) => item.id === data.id)\n                    ? \"fi fi-sr-heart\"\n                    : null\n                }\n                text={\"Add To Favorite\"}\n              />\n            </div>\n          </div>\n          <div>\n            <div className=\"recipeSection--ingredients\">\n              <h2>Ingredients</h2>\n              <ul>{ingredients}</ul>\n            </div>\n            <div className=\"recipeSection--instructions\">\n              <h2>Preparation</h2>\n              <ol>\n                <p>{data.instructions}</p>\n              </ol>\n            </div>\n          </div>\n        </div>\n        <div className=\"recipeSection--similar\">\n          <h2>Similar recipes</h2>\n          <div className=\"similar\">\n            <SimilarList data={tempData} />\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default SingleRecipeLayout;\n"],"names":["props","myFav","useContext","FavContext","price","pricePerServing","toFixed","className","src","image","defaultImage","alt","title","Button","handleClick","icon","InfoIcon","info","readyInMinutes","servings","MyLink","linkTo","id","class","data","similarRecipes","console","log","map","item","infoData","fav","tempData","ingredients","extendedIngredients","measures","metric","amount","unitShort","name","Title","InfoList","find","text","instructions"],"sourceRoot":""}